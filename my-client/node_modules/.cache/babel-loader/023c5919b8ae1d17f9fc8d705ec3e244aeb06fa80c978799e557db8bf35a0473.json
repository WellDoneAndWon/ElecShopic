{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElecShopic\\\\my-client\\\\src\\\\components\\\\MultiRangeSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport \"./MultiRangeSlider.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiRangeSlider = ({\n  min,\n  max,\n  minValue,\n  maxValue,\n  onChange\n}) => {\n  _s();\n  const minValRef = useRef(null);\n  const maxValRef = useRef(null);\n  const range = useRef(null);\n\n  // Преобразуем значения в числа и ограничиваем диапазоном\n  const minVal = Math.max(min, Math.min(Number(minValue) || min, Number(maxValue) - 1));\n  const maxVal = Math.min(max, Math.max(Number(maxValue) || max, Number(minValue) + 1));\n  const getPercent = value => Math.round((value - min) / (max - min) * 100);\n  useEffect(() => {\n    const minPercent = getPercent(minVal);\n    const maxPercent = getPercent(maxVal);\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [minVal, maxVal, min, max]);\n  const handleMinChange = e => {\n    const value = Math.min(Number(e.target.value), maxVal - 1);\n    onChange({\n      min: value,\n      max: maxVal\n    });\n  };\n  const handleMaxChange = e => {\n    const value = Math.max(Number(e.target.value), minVal + 1);\n    onChange({\n      min: minVal,\n      max: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: minVal,\n      ref: minValRef,\n      onChange: handleMinChange,\n      className: \"thumb thumb--left\",\n      style: {\n        zIndex: minVal > max - 100 ? \"5\" : undefined\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: maxVal,\n      ref: maxValRef,\n      onChange: handleMaxChange,\n      className: \"thumb thumb--right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: range,\n        className: \"slider__range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__left-value\",\n        children: minVal.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__right-value\",\n        children: maxVal.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(MultiRangeSlider, \"q+tpNGuI9TewCTghfs2Qw1RF7jg=\");\n_c = MultiRangeSlider;\nexport default MultiRangeSlider;\nvar _c;\n$RefreshReg$(_c, \"MultiRangeSlider\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","MultiRangeSlider","min","max","minValue","maxValue","onChange","_s","minValRef","maxValRef","range","minVal","Math","Number","maxVal","getPercent","value","round","minPercent","maxPercent","current","style","left","width","handleMinChange","e","target","handleMaxChange","className","children","type","ref","zIndex","undefined","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","_c","$RefreshReg$"],"sources":["C:/ElecShopic/my-client/src/components/MultiRangeSlider.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport \"./MultiRangeSlider.css\";\r\n\r\nconst MultiRangeSlider = ({\r\n                              min,\r\n                              max,\r\n                              minValue,\r\n                              maxValue,\r\n                              onChange\r\n                          }) => {\r\n    const minValRef = useRef(null);\r\n    const maxValRef = useRef(null);\r\n    const range = useRef(null);\r\n\r\n    // Преобразуем значения в числа и ограничиваем диапазоном\r\n    const minVal = Math.max(min, Math.min(Number(minValue) || min, Number(maxValue) - 1));\r\n    const maxVal = Math.min(max, Math.max(Number(maxValue) || max, Number(minValue) + 1));\r\n\r\n    const getPercent = value => Math.round(((value - min) / (max - min)) * 100);\r\n\r\n    useEffect(() => {\r\n        const minPercent = getPercent(minVal);\r\n        const maxPercent = getPercent(maxVal);\r\n\r\n        if (range.current) {\r\n            range.current.style.left = `${minPercent}%`;\r\n            range.current.style.width = `${maxPercent - minPercent}%`;\r\n        }\r\n    }, [minVal, maxVal, min, max]);\r\n\r\n    const handleMinChange = (e) => {\r\n        const value = Math.min(Number(e.target.value), maxVal - 1);\r\n        onChange({ min: value, max: maxVal });\r\n    };\r\n\r\n    const handleMaxChange = (e) => {\r\n        const value = Math.max(Number(e.target.value), minVal + 1);\r\n        onChange({ min: minVal, max: value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"slider-container\">\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={minVal}\r\n                ref={minValRef}\r\n                onChange={handleMinChange}\r\n                className=\"thumb thumb--left\"\r\n                style={{ zIndex: minVal > max - 100 ? \"5\" : undefined }}\r\n            />\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={maxVal}\r\n                ref={maxValRef}\r\n                onChange={handleMaxChange}\r\n                className=\"thumb thumb--right\"\r\n            />\r\n            <div className=\"slider\">\r\n                <div className=\"slider__track\" />\r\n                <div ref={range} className=\"slider__range\" />\r\n                <div className=\"slider__left-value\">{minVal.toLocaleString()}</div>\r\n                <div className=\"slider__right-value\">{maxVal.toLocaleString()}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MultiRangeSlider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}