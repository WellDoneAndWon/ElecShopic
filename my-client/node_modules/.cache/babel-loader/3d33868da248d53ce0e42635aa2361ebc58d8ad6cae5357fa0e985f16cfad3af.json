{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport jwt_decode from \"jwt-decode\";\nexport default class UserStore {\n  constructor(basketStore) {\n    this._isAuth = false;\n    this._user = {};\n    this._role = \"USER\";\n    this._basketStore = basketStore;\n    makeAutoObservable(this);\n  }\n  setIsAuth(bool) {\n    this._isAuth = bool;\n  }\n  setUser(user) {\n    this._user = user;\n  }\n  setRole(role) {\n    this._role = role;\n  }\n  login(token) {\n    localStorage.setItem('token', token);\n    const user = jwt_decode(token);\n    this.setAuth(true);\n    this.setUser(user);\n    // Загружаем корзину при входе\n    this._basketStore.loadFromLocalStorage();\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.setAuth(false);\n    this.setUser({});\n    // Очищаем только состояние корзины, не трогая localStorage\n    this._basketStore.clearBasket();\n  }\n  get isAuth() {\n    return this._isAuth;\n  }\n  get user() {\n    return this._user;\n  }\n  get role() {\n    return this._role;\n  }\n}","map":{"version":3,"names":["makeAutoObservable","jwt_decode","UserStore","constructor","basketStore","_isAuth","_user","_role","_basketStore","setIsAuth","bool","setUser","user","setRole","role","login","token","localStorage","setItem","setAuth","loadFromLocalStorage","logout","removeItem","clearBasket","isAuth"],"sources":["C:/ElecShopic/my-client/src/store/UserStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport default class UserStore {\r\n    constructor(basketStore) {\r\n        this._isAuth = false;\r\n        this._user = {};\r\n        this._role = \"USER\";\r\n        this._basketStore = basketStore;\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setIsAuth(bool) {\r\n        this._isAuth = bool;\r\n    }\r\n\r\n    setUser(user) {\r\n        this._user = user;\r\n    }\r\n\r\n    setRole(role) {\r\n        this._role = role;\r\n    }\r\n\r\n    login(token) {\r\n        localStorage.setItem('token', token);\r\n        const user = jwt_decode(token);\r\n        this.setAuth(true);\r\n        this.setUser(user);\r\n        // Загружаем корзину при входе\r\n        this._basketStore.loadFromLocalStorage();\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('token');\r\n        this.setAuth(false);\r\n        this.setUser({});\r\n        // Очищаем только состояние корзины, не трогая localStorage\r\n        this._basketStore.clearBasket();\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth;\r\n    }\r\n\r\n    get user() {\r\n        return this._user;\r\n    }\r\n\r\n    get role() {\r\n        return this._role;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AACzC,OAAOC,UAAU,MAAM,YAAY;AAEnC,eAAe,MAAMC,SAAS,CAAC;EAC3BC,WAAWA,CAACC,WAAW,EAAE;IACrB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACC,KAAK,GAAG,MAAM;IACnB,IAAI,CAACC,YAAY,GAAGJ,WAAW;IAC/BJ,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAS,SAASA,CAACC,IAAI,EAAE;IACZ,IAAI,CAACL,OAAO,GAAGK,IAAI;EACvB;EAEAC,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACN,KAAK,GAAGM,IAAI;EACrB;EAEAC,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACP,KAAK,GAAGO,IAAI;EACrB;EAEAC,KAAKA,CAACC,KAAK,EAAE;IACTC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpC,MAAMJ,IAAI,GAAGX,UAAU,CAACe,KAAK,CAAC;IAC9B,IAAI,CAACG,OAAO,CAAC,IAAI,CAAC;IAClB,IAAI,CAACR,OAAO,CAACC,IAAI,CAAC;IAClB;IACA,IAAI,CAACJ,YAAY,CAACY,oBAAoB,CAAC,CAAC;EAC5C;EAEAC,MAAMA,CAAA,EAAG;IACLJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACH,OAAO,CAAC,KAAK,CAAC;IACnB,IAAI,CAACR,OAAO,CAAC,CAAC,CAAC,CAAC;IAChB;IACA,IAAI,CAACH,YAAY,CAACe,WAAW,CAAC,CAAC;EACnC;EAEA,IAAIC,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACnB,OAAO;EACvB;EAEA,IAAIO,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACN,KAAK;EACrB;EAEA,IAAIQ,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACP,KAAK;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}