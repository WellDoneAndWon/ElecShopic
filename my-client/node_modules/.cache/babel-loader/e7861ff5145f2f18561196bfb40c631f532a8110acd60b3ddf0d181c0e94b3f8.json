{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { jwtDecode } from \"jwt-decode\"; // Измененный импорт\n\nexport default class UserStore {\n  constructor(basketStore) {\n    this._isAuth = false;\n    this._user = {};\n    this._role = \"USER\";\n    this._basketStore = basketStore;\n    makeAutoObservable(this);\n  }\n  setIsAuth(bool) {\n    this._isAuth = bool;\n    if (bool) {\n      this._basketStore.loadFromLocalStorage();\n    } else {\n      this._basketStore.clearBasket();\n    }\n  }\n  setUser(user) {\n    this._user = user;\n  }\n  setRole(role) {\n    this._role = role;\n  }\n  login(token) {\n    localStorage.setItem('token', token);\n    const user = jwtDecode(token); // Используем jwtDecode вместо jwt_decode\n    this.setIsAuth(true);\n    this.setUser(user);\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.setIsAuth(false);\n    this.setUser({});\n  }\n  get isAuth() {\n    return this._isAuth;\n  }\n  get user() {\n    return this._user;\n  }\n  get role() {\n    return this._role;\n  }\n}","map":{"version":3,"names":["makeAutoObservable","jwtDecode","UserStore","constructor","basketStore","_isAuth","_user","_role","_basketStore","setIsAuth","bool","loadFromLocalStorage","clearBasket","setUser","user","setRole","role","login","token","localStorage","setItem","logout","removeItem","isAuth"],"sources":["C:/ElecShopic/my-client/src/store/UserStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { jwtDecode } from \"jwt-decode\"; // Измененный импорт\r\n\r\nexport default class UserStore {\r\n    constructor(basketStore) {\r\n        this._isAuth = false;\r\n        this._user = {};\r\n        this._role = \"USER\";\r\n        this._basketStore = basketStore;\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setIsAuth(bool) {\r\n        this._isAuth = bool;\r\n        if (bool) {\r\n            this._basketStore.loadFromLocalStorage();\r\n        } else {\r\n            this._basketStore.clearBasket();\r\n        }\r\n    }\r\n\r\n    setUser(user) {\r\n        this._user = user;\r\n    }\r\n\r\n    setRole(role) {\r\n        this._role = role;\r\n    }\r\n\r\n    login(token) {\r\n        localStorage.setItem('token', token);\r\n        const user = jwtDecode(token); // Используем jwtDecode вместо jwt_decode\r\n        this.setIsAuth(true);\r\n        this.setUser(user);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('token');\r\n        this.setIsAuth(false);\r\n        this.setUser({});\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth;\r\n    }\r\n\r\n    get user() {\r\n        return this._user;\r\n    }\r\n\r\n    get role() {\r\n        return this._role;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AACzC,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;;AAExC,eAAe,MAAMC,SAAS,CAAC;EAC3BC,WAAWA,CAACC,WAAW,EAAE;IACrB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACC,KAAK,GAAG,MAAM;IACnB,IAAI,CAACC,YAAY,GAAGJ,WAAW;IAC/BJ,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAS,SAASA,CAACC,IAAI,EAAE;IACZ,IAAI,CAACL,OAAO,GAAGK,IAAI;IACnB,IAAIA,IAAI,EAAE;MACN,IAAI,CAACF,YAAY,CAACG,oBAAoB,CAAC,CAAC;IAC5C,CAAC,MAAM;MACH,IAAI,CAACH,YAAY,CAACI,WAAW,CAAC,CAAC;IACnC;EACJ;EAEAC,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACR,KAAK,GAAGQ,IAAI;EACrB;EAEAC,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACT,KAAK,GAAGS,IAAI;EACrB;EAEAC,KAAKA,CAACC,KAAK,EAAE;IACTC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpC,MAAMJ,IAAI,GAAGb,SAAS,CAACiB,KAAK,CAAC,CAAC,CAAC;IAC/B,IAAI,CAACT,SAAS,CAAC,IAAI,CAAC;IACpB,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC;EACtB;EAEAO,MAAMA,CAAA,EAAG;IACLF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACb,SAAS,CAAC,KAAK,CAAC;IACrB,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;EACpB;EAEA,IAAIU,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAAClB,OAAO;EACvB;EAEA,IAAIS,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACR,KAAK;EACrB;EAEA,IAAIU,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACT,KAAK;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}