{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nexport const createType = async type => {\n  const {\n    data\n  } = await $authHost.post('api/type', type);\n  return data;\n};\nexport const fetchTypes = async () => {\n  const {\n    data\n  } = await $host.get('api/type');\n  return data;\n};\nexport const createBrand = async brand => {\n  const {\n    data\n  } = await $authHost.post('api/brand', brand);\n  return data;\n};\nexport const fetchBrands = async (typeId, brandId, page, limit = 5) => {\n  const {\n    data\n  } = await $host.get('api/brand', {\n    params: {\n      typeId,\n      brandId,\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const createDevice = async device => {\n  try {\n    const {\n      data\n    } = await $authHost.post('api/device', device);\n    return data;\n  } catch (e) {\n    var _e$response, _e$response$data;\n    throw new Error(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || \"Ошибка создания устройства\");\n  }\n};\nexport const fetchDevices = async () => {\n  const {\n    data\n  } = await $host.get('api/device');\n  return data;\n};\nexport const fetchOneDevice = async id => {\n  const {\n    data\n  } = await $host.get('api/device/' + id);\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","createType","type","data","post","fetchTypes","get","createBrand","brand","fetchBrands","typeId","brandId","page","limit","params","createDevice","device","e","_e$response","_e$response$data","Error","response","message","fetchDevices","fetchOneDevice","id"],"sources":["C:/ElecShopic/my-client/src/http/deviceAPI.js"],"sourcesContent":["import { $authHost, $host } from \"./index\";\r\n\r\nexport const createType = async (type) => {\r\n    const { data } = await $authHost.post('api/type', type);\r\n    return data;\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const { data } = await $host.get('api/type');\r\n    return data;\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const { data } = await $authHost.post('api/brand', brand);\r\n    return data;\r\n}\r\n\r\nexport const fetchBrands = async (typeId, brandId, page, limit=5) => {\r\n    const { data } = await $host.get('api/brand', {params: {\r\n            typeId, brandId, page, limit\r\n        }});\r\n    return data;\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    try {\r\n        const { data } = await $authHost.post('api/device', device);\r\n        return data;\r\n    } catch (e) {\r\n        throw new Error(e.response?.data?.message || \"Ошибка создания устройства\");\r\n    }\r\n}\r\n\r\nexport const fetchDevices = async () => {\r\n    const { data } = await $host.get('api/device');\r\n    return data;\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const { data } = await $host.get('api/device/' + id);\r\n    return data;\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,SAAS;AAE1C,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,UAAU,EAAEF,IAAI,CAAC;EACvD,OAAOC,IAAI;AACf,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAM;IAAEF;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,UAAU,CAAC;EAC5C,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,MAAOC,KAAK,IAAK;EACxC,MAAM;IAAEL;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,WAAW,EAAEI,KAAK,CAAC;EACzD,OAAOL,IAAI;AACf,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG,MAAAA,CAAOC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,KAAK,GAAC,CAAC,KAAK;EACjE,MAAM;IAAEV;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,WAAW,EAAE;IAACQ,MAAM,EAAE;MAC/CJ,MAAM;MAAEC,OAAO;MAAEC,IAAI;MAAEC;IAC3B;EAAC,CAAC,CAAC;EACP,OAAOV,IAAI;AACf,CAAC;AAED,OAAO,MAAMY,YAAY,GAAG,MAAOC,MAAM,IAAK;EAC1C,IAAI;IACA,MAAM;MAAEb;IAAK,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,YAAY,EAAEY,MAAM,CAAC;IAC3D,OAAOb,IAAI;EACf,CAAC,CAAC,OAAOc,CAAC,EAAE;IAAA,IAAAC,WAAA,EAAAC,gBAAA;IACR,MAAM,IAAIC,KAAK,CAAC,EAAAF,WAAA,GAAAD,CAAC,CAACI,QAAQ,cAAAH,WAAA,wBAAAC,gBAAA,GAAVD,WAAA,CAAYf,IAAI,cAAAgB,gBAAA,uBAAhBA,gBAAA,CAAkBG,OAAO,KAAI,4BAA4B,CAAC;EAC9E;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAM;IAAEpB;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,YAAY,CAAC;EAC9C,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMqB,cAAc,GAAG,MAAOC,EAAE,IAAK;EACxC,MAAM;IAAEtB;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,aAAa,GAAGmB,EAAE,CAAC;EACpD,OAAOtB,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}