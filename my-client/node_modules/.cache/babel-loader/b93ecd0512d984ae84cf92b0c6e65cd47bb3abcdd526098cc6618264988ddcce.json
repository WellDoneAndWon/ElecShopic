{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElecShopic\\\\my-client\\\\src\\\\components\\\\BrandBar.js\",\n  _s = $RefreshSig$();\nimport { Context } from \"../index\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smallCardStyle = {\n  cursor: 'pointer',\n  borderRadius: '8px',\n  minWidth: '70px',\n  padding: '8px 12px',\n  margin: '4px',\n  textAlign: 'center',\n  userSelect: 'none',\n  fontSize: '0.8rem',\n  transition: 'all 0.3s ease'\n};\nconst BrandBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"d-flex\",\n    children: device.brands.map(brand => {\n      var _device$selectedBrand, _device$selectedBrand2;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"d-inline-block\",\n        style: {\n          ...smallCardStyle,\n          border: brand.id === ((_device$selectedBrand = device.selectedBrand) === null || _device$selectedBrand === void 0 ? void 0 : _device$selectedBrand.id) ? '2px solid #007bff' : '1px solid lightgray',\n          background: brand.id === ((_device$selectedBrand2 = device.selectedBrand) === null || _device$selectedBrand2 === void 0 ? void 0 : _device$selectedBrand2.id) ? '#e9f5ff' : 'white'\n        },\n        onClick: () => device.setSelectedBrand(brand),\n        children: brand.name\n      }, brand.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}, \"OFJwJETkh/v32tNXsuGFzaMBUfI=\")), \"OFJwJETkh/v32tNXsuGFzaMBUfI=\");\n_c2 = BrandBar;\nexport default BrandBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"BrandBar$observer\");\n$RefreshReg$(_c2, \"BrandBar\");","map":{"version":3,"names":["Context","Card","Row","observer","React","useContext","jsxDEV","_jsxDEV","smallCardStyle","cursor","borderRadius","minWidth","padding","margin","textAlign","userSelect","fontSize","transition","BrandBar","_s","_c","device","className","children","brands","map","brand","_device$selectedBrand","_device$selectedBrand2","style","border","id","selectedBrand","background","onClick","setSelectedBrand","name","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/ElecShopic/my-client/src/components/BrandBar.js"],"sourcesContent":["import { Context } from \"../index\";\r\nimport { Card, Row } from \"react-bootstrap\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\n\r\nconst smallCardStyle = {\r\n    cursor: 'pointer',\r\n    borderRadius: '8px',\r\n    minWidth: '70px',\r\n    padding: '8px 12px',\r\n    margin: '4px',\r\n    textAlign: 'center',\r\n    userSelect: 'none',\r\n    fontSize: '0.8rem',\r\n    transition: 'all 0.3s ease'\r\n};\r\n\r\nconst BrandBar = observer(() => {\r\n    const { device } = useContext(Context);\r\n\r\n    return (\r\n        <Row className=\"d-flex\">\r\n            {device.brands.map(brand =>\r\n                <Card\r\n                    key={brand.id}\r\n                    className=\"d-inline-block\"\r\n                    style={{\r\n                        ...smallCardStyle,\r\n                        border: brand.id === device.selectedBrand?.id ? '2px solid #007bff' : '1px solid lightgray',\r\n                        background: brand.id === device.selectedBrand?.id ? '#e9f5ff' : 'white'\r\n                    }}\r\n                    onClick={() => device.setSelectedBrand(brand)}\r\n                >\r\n                    {brand.name}\r\n                </Card>\r\n            )}\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default BrandBar;\r\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,UAAU;AAClC,SAASC,IAAI,EAAEC,GAAG,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,SAAS;EACjBC,YAAY,EAAE,KAAK;EACnBC,QAAQ,EAAE,MAAM;EAChBC,OAAO,EAAE,UAAU;EACnBC,MAAM,EAAE,KAAK;EACbC,SAAS,EAAE,QAAQ;EACnBC,UAAU,EAAE,MAAM;EAClBC,QAAQ,EAAE,QAAQ;EAClBC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,QAAQ,GAAAC,EAAA,CAAGhB,QAAQ,CAAAiB,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC5B,MAAM;IAAEE;EAAO,CAAC,GAAGhB,UAAU,CAACL,OAAO,CAAC;EAEtC,oBACIO,OAAA,CAACL,GAAG;IAACoB,SAAS,EAAC,QAAQ;IAAAC,QAAA,EAClBF,MAAM,CAACG,MAAM,CAACC,GAAG,CAACC,KAAK;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MAAA,oBACpBrB,OAAA,CAACN,IAAI;QAEDqB,SAAS,EAAC,gBAAgB;QAC1BO,KAAK,EAAE;UACH,GAAGrB,cAAc;UACjBsB,MAAM,EAAEJ,KAAK,CAACK,EAAE,OAAAJ,qBAAA,GAAKN,MAAM,CAACW,aAAa,cAAAL,qBAAA,uBAApBA,qBAAA,CAAsBI,EAAE,IAAG,mBAAmB,GAAG,qBAAqB;UAC3FE,UAAU,EAAEP,KAAK,CAACK,EAAE,OAAAH,sBAAA,GAAKP,MAAM,CAACW,aAAa,cAAAJ,sBAAA,uBAApBA,sBAAA,CAAsBG,EAAE,IAAG,SAAS,GAAG;QACpE,CAAE;QACFG,OAAO,EAAEA,CAAA,KAAMb,MAAM,CAACc,gBAAgB,CAACT,KAAK,CAAE;QAAAH,QAAA,EAE7CG,KAAK,CAACU;MAAI,GATNV,KAAK,CAACK,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUX,CAAC;IAAA,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC,kCAAC;AAACC,GAAA,GArBGvB,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAAE,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}