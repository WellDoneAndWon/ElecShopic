{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nexport default class BasketStore {\n  constructor() {\n    this._items = [];\n    this._userId = null;\n    makeAutoObservable(this);\n  }\n  setUserId(userId) {\n    this._userId = userId;\n    this.loadFromLocalStorage();\n  }\n  loadFromLocalStorage() {\n    if (!this._userId) {\n      this._items = [];\n      return;\n    }\n    const savedBasket = localStorage.getItem(`basket_${this._userId}`);\n    if (savedBasket) {\n      this._items = JSON.parse(savedBasket);\n    } else {\n      this._items = [];\n    }\n  }\n  saveToLocalStorage() {\n    if (!this._userId) return;\n    localStorage.setItem(`basket_${this._userId}`, JSON.stringify(this._items));\n  }\n  addToBasket(device) {\n    if (!this._userId) return;\n    const existingItem = this._items.find(item => item.device.id === device.id);\n    if (existing极Item) {\n      existingItem.quantity += 1;\n    } else {\n      this._items.push({\n        device,\n        quantity: 1\n      });\n    }\n    this.saveToLocalStorage();\n  }\n  removeFromBasket(id) {\n    this._items = this._items.filter(item => item.device.id !== id);\n    this.saveToLocalStorage();\n  }\n  increaseQuantity(id) {\n    const item = this._items.find(item => item.device.id === id);\n    if (item) {\n      item.quantity += 1;\n      this.saveToLocalStorage();\n    }\n  }\n  decreaseQuantity(id) {\n    const item = this._items.find(item => item.device.id === id);\n    if (item) {\n      if (item.quantity > 1) {\n        item.quantity -= 1;\n      } else {\n        this.removeFromBasket(id);\n      }\n      this.saveToLocalStorage();\n    }\n  }\n  clearBasket() {\n    this._items = [];\n    // Не очищаем localStorage здесь\n  }\n  get items() {\n    return this._items;\n  }\n  get totalCount() {\n    return this._items.reduce((sum, item) => sum + item.quantity, 0);\n  }\n  get totalPrice() {\n    return this._items.reduce((sum, item) => sum + item.device.price * item.quantity, 0);\n  }\n}","map":{"version":3,"names":["makeAutoObservable","BasketStore","constructor","_items","_userId","setUserId","userId","loadFromLocalStorage","savedBasket","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","addToBasket","device","existingItem","find","item","id","existing极Item","quantity","push","removeFromBasket","filter","increaseQuantity","decreaseQuantity","clearBasket","items","totalCount","reduce","sum","totalPrice","price"],"sources":["C:/ElecShopic/my-client/src/store/BasketStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nexport default class BasketStore {\r\n    constructor() {\r\n        this._items = [];\r\n        this._userId = null;\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setUserId(userId) {\r\n        this._userId = userId;\r\n        this.loadFromLocalStorage();\r\n    }\r\n\r\n    loadFromLocalStorage() {\r\n        if (!this._userId) {\r\n            this._items = [];\r\n            return;\r\n        }\r\n\r\n        const savedBasket = localStorage.getItem(`basket_${this._userId}`);\r\n        if (savedBasket) {\r\n            this._items = JSON.parse(savedBasket);\r\n        } else {\r\n            this._items = [];\r\n        }\r\n    }\r\n\r\n    saveToLocalStorage() {\r\n        if (!this._userId) return;\r\n        localStorage.setItem(`basket_${this._userId}`, JSON.stringify(this._items));\r\n    }\r\n\r\n    addToBasket(device) {\r\n        if (!this._userId) return;\r\n        const existingItem = this._items.find(item => item.device.id === device.id);\r\n        if (existing极Item) {\r\n            existingItem.quantity += 1;\r\n        } else {\r\n            this._items.push({ device, quantity: 1 });\r\n        }\r\n        this.saveToLocalStorage();\r\n    }\r\n\r\n    removeFromBasket(id) {\r\n        this._items = this._items.filter(item => item.device.id !== id);\r\n        this.saveToLocalStorage();\r\n    }\r\n\r\n    increaseQuantity(id) {\r\n        const item = this._items.find(item => item.device.id === id);\r\n        if (item) {\r\n            item.quantity += 1;\r\n            this.saveToLocalStorage();\r\n        }\r\n    }\r\n\r\n    decreaseQuantity(id) {\r\n        const item = this._items.find(item => item.device.id === id);\r\n        if (item) {\r\n            if (item.quantity > 1) {\r\n                item.quantity -= 1;\r\n            } else {\r\n                this.removeFromBasket(id);\r\n            }\r\n            this.saveToLocalStorage();\r\n        }\r\n    }\r\n\r\n    clearBasket() {\r\n        this._items = [];\r\n        // Не очищаем localStorage здесь\r\n    }\r\n\r\n    get items() {\r\n        return this._items;\r\n    }\r\n\r\n    get totalCount() {\r\n        return this._items.reduce((sum, item) => sum + item.quantity, 0);\r\n    }\r\n\r\n    get totalPrice() {\r\n        return this._items.reduce((sum, item) => sum + item.device.price * item.quantity, 0);\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}