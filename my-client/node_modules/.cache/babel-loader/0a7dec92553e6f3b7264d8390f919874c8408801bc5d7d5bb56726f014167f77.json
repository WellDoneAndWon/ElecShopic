{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElecShopic\\\\my-client\\\\src\\\\pages\\\\Shop.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Col, Container, Row, Form } from \"react-bootstrap\";\nimport TypeBar from '../components/TypeBar';\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport { Context } from \"../index\";\nimport { fetchTypes, fetchBrands, fetchDevices } from \"../http/deviceAPI\";\nimport { observer } from \"mobx-react-lite\";\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  const [search, setSearch] = useState(\"\"); // состояние поиска\n\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data));\n    fetchBrands().then(data => device.setBrands(data));\n    fetchDevices(null, null, 1, 3).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, [device]);\n  useEffect(() => {\n    fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 3).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, [device.page, device.selectedType, device.selectedBrand]);\n\n  // фильтрация устройств по поиску (по имени)\n  const filteredDevices = device.devices.filter(dev => dev.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(BrandBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432...\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeviceList, {\n          devices: filteredDevices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}, \"IBh2T45AVjBgS9f4AVXkvVBKbBo=\")), \"IBh2T45AVjBgS9f4AVXkvVBKbBo=\");\n_c2 = Shop;\nexport default Shop;\nvar _c, _c2;\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Col","Container","Row","Form","TypeBar","BrandBar","DeviceList","Context","fetchTypes","fetchBrands","fetchDevices","observer","Pages","jsxDEV","_jsxDEV","Shop","_s","_c","device","search","setSearch","then","data","setTypes","setBrands","setDevices","rows","setTotalCount","count","selectedType","id","selectedBrand","page","filteredDevices","devices","filter","dev","name","toLowerCase","includes","children","className","md","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","e","target","_c2","$RefreshReg$"],"sources":["C:/ElecShopic/my-client/src/pages/Shop.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Col, Container, Row, Form } from \"react-bootstrap\";\r\nimport TypeBar from '../components/TypeBar';\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport { Context } from \"../index\";\r\nimport { fetchTypes, fetchBrands, fetchDevices } from \"../http/deviceAPI\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const { device } = useContext(Context);\r\n    const [search, setSearch] = useState(\"\"); // состояние поиска\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data));\r\n        fetchBrands().then(data => device.setBrands(data));\r\n        fetchDevices(null, null, 1, 3).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device]);\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 3).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand])\r\n\r\n    // фильтрация устройств по поиску (по имени)\r\n    const filteredDevices = device.devices.filter(dev =>\r\n        dev.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n            <Row className='mt-2'>\r\n                <Col md={3}>\r\n                    <TypeBar />\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar />\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Поиск товаров...\"\r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                        className=\"mb-3\"\r\n                    />\r\n                    <DeviceList devices={filteredDevices} />\r\n                    <Pages />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}