{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElecShopic\\\\my-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { $authHost, $host } from \"./index\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport { observer } from \"mobx-react\";\nimport { Context } from \"./index\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { check } from \"./http/userAPI\"; // Импортируйте функцию проверки\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    user\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      check().then(data => {\n        user.setUser(data); // <-- тут передавайте данные пользователя\n        user.setIsAuth(true);\n      }).finally(() => setLoading(false));\n    }, 1000);\n  }, [user]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}, \"4mt1jDoDt0h52XCxQdiEl89i/LM=\")), \"4mt1jDoDt0h52XCxQdiEl89i/LM=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["$authHost","$host","React","useContext","useState","useEffect","BrowserRouter","AppRouter","NavBar","observer","Context","Spinner","check","jsxDEV","_jsxDEV","App","_s","_c","user","loading","setLoading","setTimeout","then","data","setUser","setIsAuth","finally","animation","fileName","_jsxFileName","lineNumber","columnNumber","children","_c2","$RefreshReg$"],"sources":["C:/ElecShopic/my-client/src/App.js"],"sourcesContent":["import { $authHost, $host } from \"./index\";\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport { observer } from \"mobx-react\";\nimport { Context } from \"./index\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { check } from \"./http/userAPI\"; // Импортируйте функцию проверки\n\nconst App = observer(() => {\n    const { user } = useContext(Context);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setTimeout(() => {\n            check().then(data => {\n                user.setUser(data); // <-- тут передавайте данные пользователя\n                user.setIsAuth(true);\n            }).finally(() => setLoading(false));\n        }, 1000);\n    }, [user]);\n\n    if (loading) {\n        return <Spinner animation=\"grow\" />;\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,SAAS;AAE1C,OAAOC,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,OAAO,QAAQ,SAAS;AACjC,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,SAASC,KAAK,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAAC,EAAA,CAAGP,QAAQ,CAAAQ,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACvB,MAAM;IAAEE;EAAK,CAAC,GAAGf,UAAU,CAACO,OAAO,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZgB,UAAU,CAAC,MAAM;MACbT,KAAK,CAAC,CAAC,CAACU,IAAI,CAACC,IAAI,IAAI;QACjBL,IAAI,CAACM,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;QACpBL,IAAI,CAACO,SAAS,CAAC,IAAI,CAAC;MACxB,CAAC,CAAC,CAACC,OAAO,CAAC,MAAMN,UAAU,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EAEV,IAAIC,OAAO,EAAE;IACT,oBAAOL,OAAA,CAACH,OAAO;MAACgB,SAAS,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvC;EAEA,oBACIjB,OAAA,CAACR,aAAa;IAAA0B,QAAA,gBACVlB,OAAA,CAACN,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjB,OAAA,CAACP,SAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAExB,CAAC,kCAAC;AAACE,GAAA,GAvBGlB,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAE,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}