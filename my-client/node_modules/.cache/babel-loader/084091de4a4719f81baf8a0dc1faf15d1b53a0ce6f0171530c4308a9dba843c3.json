{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { deleteType, deleteBrand, deleteDevice } from \"../http/deviceAPI\";\nexport default class DeviceStore {\n  constructor() {\n    // Методы для удаления\n    this.deleteType = async id => {\n      await deleteType(id);\n      this._types = this._types.filter(type => type.id !== id);\n    };\n    this.deleteBrand = async id => {\n      await deleteBrand(id);\n      this._brands = this._brands.filter(brand => brand.id !== id);\n    };\n    this.deleteDevice = async id => {\n      await deleteDevice(id);\n      this._devices = this._devices.filter(device => device.id !== id);\n    };\n    this._types = [];\n    this._brands = [];\n    this._devices = [];\n    this._selectedType = {};\n    this._selectedBrand = {};\n    this._page = 1;\n    this._totalCount = 0;\n    this._limit = 3;\n    makeAutoObservable(this);\n  }\n  setTypes(types) {\n    this._types = types;\n  }\n  setBrands(brands) {\n    this._brands = brands;\n  }\n  setDevices(devices) {\n    this._devices = devices;\n  }\n  setSelectedType(type) {\n    this.setPage(1);\n    this._selectedType = type;\n  }\n  setSelectedBrand(brand) {\n    this._selectedBrand = brand;\n  }\n  setPage(page) {\n    this._page = page;\n  }\n  setLimit(limit) {\n    this._limit = limit;\n  }\n  setTotalCount(count) {\n    this._totalCount = count;\n  }\n  get types() {\n    return this._types;\n  }\n  get brands() {\n    return this._brands;\n  }\n  get devices() {\n    return this._devices;\n  }\n  get selectedType() {\n    return this._selectedType;\n  }\n  get selectedBrand() {\n    return this._selectedBrand;\n  }\n  get page() {\n    return this._page;\n  }\n  get limit() {\n    return this._limit;\n  }\n  get totalCount() {\n    return this._totalCount;\n  }\n}","map":{"version":3,"names":["makeAutoObservable","deleteType","deleteBrand","deleteDevice","DeviceStore","constructor","id","_types","filter","type","_brands","brand","_devices","device","_selectedType","_selectedBrand","_page","_totalCount","_limit","setTypes","types","setBrands","brands","setDevices","devices","setSelectedType","setPage","setSelectedBrand","page","setLimit","limit","setTotalCount","count","selectedType","selectedBrand","totalCount"],"sources":["C:/ElecShopic/my-client/src/store/DeviceStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { deleteType, deleteBrand, deleteDevice } from \"../http/deviceAPI\";\r\n\r\nexport default class DeviceStore {\r\n    constructor() {\r\n        this._types = []\r\n\r\n        this._brands = []\r\n\r\n        this._devices = []\r\n\r\n        this._selectedType = {}\r\n        this._selectedBrand = {}\r\n        this._page = 1\r\n        this._totalCount = 0\r\n        this._limit = 3\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n\r\n    setTypes(types) {\r\n        this._types = types\r\n    }\r\n    setBrands(brands) {\r\n        this._brands = brands\r\n    }\r\n    setDevices(devices) {\r\n        this._devices = devices\r\n    }\r\n    setSelectedType(type) {\r\n        this.setPage(1)\r\n        this._selectedType = type\r\n    }\r\n    setSelectedBrand(brand) {\r\n        this._selectedBrand = brand\r\n    }\r\n    setPage(page) {\r\n        this._page = page\r\n    }\r\n    setLimit(limit) {\r\n        this._limit = limit\r\n    }\r\n    setTotalCount(count) {\r\n        this._totalCount = count\r\n    }\r\n\r\n\r\n    get types() {\r\n        return this._types\r\n    }\r\n    get brands() {\r\n        return this._brands\r\n    }\r\n    get devices() {\r\n        return this._devices\r\n    }\r\n    get selectedType() {\r\n        return this._selectedType\r\n    }\r\n    get selectedBrand() {\r\n        return this._selectedBrand\r\n    }\r\n    get page() {\r\n        return this._page\r\n    }\r\n    get limit() {\r\n        return this._limit\r\n    }\r\n    get totalCount() {\r\n        return this._totalCount\r\n    }\r\n\r\n    // Методы для удаления\r\n    deleteType = async (id) => {\r\n        await deleteType(id);\r\n        this._types = this._types.filter(type => type.id !== id);\r\n    }\r\n\r\n    deleteBrand = async (id) => {\r\n        await deleteBrand(id);\r\n        this._brands = this._brands.filter(brand => brand.id !== id);\r\n    }\r\n\r\n    deleteDevice = async (id) => {\r\n        await deleteDevice(id);\r\n        this._devices = this._devices.filter(device => device.id !== id);\r\n    }\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}