{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElecShopic\\\\my-client\\\\src\\\\components\\\\BrandBar.js\",\n  _s = $RefreshSig$();\nimport { Context } from \"../index\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrandBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"d-flex flex-wrap\",\n    style: {\n      gap: '8px'\n    },\n    children: device.brands.map(brand => {\n      var _device$selectedBrand, _device$selectedBrand2;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-2\",\n        style: {\n          cursor: 'pointer',\n          borderRadius: '8px',\n          width: 'auto',\n          padding: '8px 16px',\n          textAlign: 'center',\n          userSelect: 'none',\n          fontSize: '0.9rem',\n          border: brand.id === ((_device$selectedBrand = device.selectedBrand) === null || _device$selectedBrand === void 0 ? void 0 : _device$selectedBrand.id) ? '2px solid #007bff' : '1px solid lightgray',\n          background: brand.id === ((_device$selectedBrand2 = device.selectedBrand) === null || _device$selectedBrand2 === void 0 ? void 0 : _device$selectedBrand2.id) ? '#e9f5ff' : 'white',\n          whiteSpace: 'nowrap',\n          transition: 'all 0.3s ease'\n        },\n        onClick: () => {\n          var _device$selectedBrand3;\n          if (brand.id === ((_device$selectedBrand3 = device.selectedBrand) === null || _device$selectedBrand3 === void 0 ? void 0 : _device$selectedBrand3.id)) {\n            device.setSelectedBrand({});\n          } else {\n            device.setSelectedBrand(brand);\n          }\n        },\n        children: brand.name\n      }, brand.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}, \"OFJwJETkh/v32tNXsuGFzaMBUfI=\")), \"OFJwJETkh/v32tNXsuGFzaMBUfI=\");\n_c2 = BrandBar;\nexport default BrandBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"BrandBar$observer\");\n$RefreshReg$(_c2, \"BrandBar\");","map":{"version":3,"names":["Context","Card","Row","observer","React","useContext","jsxDEV","_jsxDEV","BrandBar","_s","_c","device","className","style","gap","children","brands","map","brand","_device$selectedBrand","_device$selectedBrand2","cursor","borderRadius","width","padding","textAlign","userSelect","fontSize","border","id","selectedBrand","background","whiteSpace","transition","onClick","_device$selectedBrand3","setSelectedBrand","name","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/ElecShopic/my-client/src/components/BrandBar.js"],"sourcesContent":["import { Context } from \"../index\";\r\nimport { Card, Row } from \"react-bootstrap\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\n\r\nconst BrandBar = observer(() => {\r\n    const { device } = useContext(Context);\r\n\r\n    return (\r\n        <Row\r\n            className=\"d-flex flex-wrap\"\r\n            style={{ gap: '8px' }}\r\n        >\r\n            {device.brands.map(brand =>\r\n                <Card\r\n                    key={brand.id}\r\n                    className=\"p-2\"\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        borderRadius: '8px',\r\n                        width: 'auto',\r\n                        padding: '8px 16px',\r\n                        textAlign: 'center',\r\n                        userSelect: 'none',\r\n                        fontSize: '0.9rem',\r\n                        border: brand.id === device.selectedBrand?.id ? '2px solid #007bff' : '1px solid lightgray',\r\n                        background: brand.id === device.selectedBrand?.id ? '#e9f5ff' : 'white',\r\n                        whiteSpace: 'nowrap',\r\n                        transition: 'all 0.3s ease'\r\n                    }}\r\n                    onClick={() => {\r\n                        if (brand.id === device.selectedBrand?.id) {\r\n                            device.setSelectedBrand({});\r\n                        } else {\r\n                            device.setSelectedBrand(brand);\r\n                        }\r\n                    }}\r\n                >\r\n                    {brand.name}\r\n                </Card>\r\n            )}\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default BrandBar;\r\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,UAAU;AAClC,SAASC,IAAI,EAAEC,GAAG,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAAC,EAAA,CAAGN,QAAQ,CAAAO,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC5B,MAAM;IAAEE;EAAO,CAAC,GAAGN,UAAU,CAACL,OAAO,CAAC;EAEtC,oBACIO,OAAA,CAACL,GAAG;IACAU,SAAS,EAAC,kBAAkB;IAC5BC,KAAK,EAAE;MAAEC,GAAG,EAAE;IAAM,CAAE;IAAAC,QAAA,EAErBJ,MAAM,CAACK,MAAM,CAACC,GAAG,CAACC,KAAK;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MAAA,oBACpBb,OAAA,CAACN,IAAI;QAEDW,SAAS,EAAC,KAAK;QACfC,KAAK,EAAE;UACHQ,MAAM,EAAE,SAAS;UACjBC,YAAY,EAAE,KAAK;UACnBC,KAAK,EAAE,MAAM;UACbC,OAAO,EAAE,UAAU;UACnBC,SAAS,EAAE,QAAQ;UACnBC,UAAU,EAAE,MAAM;UAClBC,QAAQ,EAAE,QAAQ;UAClBC,MAAM,EAAEV,KAAK,CAACW,EAAE,OAAAV,qBAAA,GAAKR,MAAM,CAACmB,aAAa,cAAAX,qBAAA,uBAApBA,qBAAA,CAAsBU,EAAE,IAAG,mBAAmB,GAAG,qBAAqB;UAC3FE,UAAU,EAAEb,KAAK,CAACW,EAAE,OAAAT,sBAAA,GAAKT,MAAM,CAACmB,aAAa,cAAAV,sBAAA,uBAApBA,sBAAA,CAAsBS,EAAE,IAAG,SAAS,GAAG,OAAO;UACvEG,UAAU,EAAE,QAAQ;UACpBC,UAAU,EAAE;QAChB,CAAE;QACFC,OAAO,EAAEA,CAAA,KAAM;UAAA,IAAAC,sBAAA;UACX,IAAIjB,KAAK,CAACW,EAAE,OAAAM,sBAAA,GAAKxB,MAAM,CAACmB,aAAa,cAAAK,sBAAA,uBAApBA,sBAAA,CAAsBN,EAAE,GAAE;YACvClB,MAAM,CAACyB,gBAAgB,CAAC,CAAC,CAAC,CAAC;UAC/B,CAAC,MAAM;YACHzB,MAAM,CAACyB,gBAAgB,CAAClB,KAAK,CAAC;UAClC;QACJ,CAAE;QAAAH,QAAA,EAEDG,KAAK,CAACmB;MAAI,GAvBNnB,KAAK,CAACW,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBX,CAAC;IAAA,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC,kCAAC;AAACC,GAAA,GAtCGlC,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAE,EAAA,EAAAgC,GAAA;AAAAC,YAAA,CAAAjC,EAAA;AAAAiC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}