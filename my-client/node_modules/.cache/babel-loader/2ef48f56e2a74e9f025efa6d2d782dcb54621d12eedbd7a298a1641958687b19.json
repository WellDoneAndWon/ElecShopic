{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nexport default class BasketStore {\n  constructor() {\n    this._items = [];\n    makeAutoObservable(this);\n    this.loadFromLocalStorage();\n  }\n  loadFromLocalStorage() {\n    const savedBasket = localStorage.getItem('basket');\n    if (savedBasket) {\n      this._items = JSON.parse(savedBasket);\n    }\n  }\n  saveToLocalStorage() {\n    localStorage.setItem('basket', JSON.stringify(this._items));\n  }\n  addToBasket(device) {\n    const existingItem = this._items.find(item => item.device.id === device.id);\n    if (existingItem) {\n      existingItem.quantity += 1;\n    } else {\n      this._items.push({\n        device,\n        quantity: 1\n      });\n    }\n    this.saveToLocalStorage();\n  }\n  removeFromBasket(id) {\n    this._items = this._items.filter(item => item.device.id !== id);\n    this.saveToLocalStorage();\n  }\n  changeQuantity(id, quantity) {\n    const item = this._items.find(item => item.device.id === id);\n    if (item) {\n      item.quantity = quantity;\n      this.saveToLocalStorage();\n    }\n  }\n  clearBasket() {\n    this._items = [];\n    localStorage.removeItem('basket');\n  }\n  get items() {\n    return this._items;\n  }\n  get totalCount() {\n    return this._items.reduce((sum, item) => sum + item.quantity, 0);\n  }\n  get totalPrice() {\n    return this._items.reduce((sum, item) => sum + item.device.price * item.quantity, 0);\n  }\n}","map":{"version":3,"names":["makeAutoObservable","BasketStore","constructor","_items","loadFromLocalStorage","savedBasket","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","addToBasket","device","existingItem","find","item","id","quantity","push","removeFromBasket","filter","changeQuantity","clearBasket","removeItem","items","totalCount","reduce","sum","totalPrice","price"],"sources":["C:/ElecShopic/my-client/src/store/BasketStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nexport default class BasketStore {\r\n    constructor() {\r\n        this._items = [];\r\n        makeAutoObservable(this);\r\n        this.loadFromLocalStorage();\r\n    }\r\n\r\n    loadFromLocalStorage() {\r\n        const savedBasket = localStorage.getItem('basket');\r\n        if (savedBasket) {\r\n            this._items = JSON.parse(savedBasket);\r\n        }\r\n    }\r\n\r\n    saveToLocalStorage() {\r\n        localStorage.setItem('basket', JSON.stringify(this._items));\r\n    }\r\n\r\n    addToBasket(device) {\r\n        const existingItem = this._items.find(item => item.device.id === device.id);\r\n        if (existingItem) {\r\n            existingItem.quantity += 1;\r\n        } else {\r\n            this._items.push({ device, quantity: 1 });\r\n        }\r\n        this.saveToLocalStorage();\r\n    }\r\n\r\n    removeFromBasket(id) {\r\n        this._items = this._items.filter(item => item.device.id !== id);\r\n        this.saveToLocalStorage();\r\n    }\r\n\r\n    changeQuantity(id, quantity) {\r\n        const item = this._items.find(item => item.device.id === id);\r\n        if (item) {\r\n            item.quantity = quantity;\r\n            this.saveToLocalStorage();\r\n        }\r\n    }\r\n\r\n    clearBasket() {\r\n        this._items = [];\r\n        localStorage.removeItem('basket');\r\n    }\r\n\r\n    get items() {\r\n        return this._items;\r\n    }\r\n\r\n    get totalCount() {\r\n        return this._items.reduce((sum, item) => sum + item.quantity, 0);\r\n    }\r\n\r\n    get totalPrice() {\r\n        return this._items.reduce((sum, item) => sum + item.device.price * item.quantity, 0);\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAEzC,eAAe,MAAMC,WAAW,CAAC;EAC7BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,MAAM,GAAG,EAAE;IAChBH,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAI,CAACI,oBAAoB,CAAC,CAAC;EAC/B;EAEAA,oBAAoBA,CAAA,EAAG;IACnB,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAClD,IAAIF,WAAW,EAAE;MACb,IAAI,CAACF,MAAM,GAAGK,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC;IACzC;EACJ;EAEAK,kBAAkBA,CAAA,EAAG;IACjBJ,YAAY,CAACK,OAAO,CAAC,QAAQ,EAAEH,IAAI,CAACI,SAAS,CAAC,IAAI,CAACT,MAAM,CAAC,CAAC;EAC/D;EAEAU,WAAWA,CAACC,MAAM,EAAE;IAChB,MAAMC,YAAY,GAAG,IAAI,CAACZ,MAAM,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,MAAM,CAACI,EAAE,KAAKJ,MAAM,CAACI,EAAE,CAAC;IAC3E,IAAIH,YAAY,EAAE;MACdA,YAAY,CAACI,QAAQ,IAAI,CAAC;IAC9B,CAAC,MAAM;MACH,IAAI,CAAChB,MAAM,CAACiB,IAAI,CAAC;QAAEN,MAAM;QAAEK,QAAQ,EAAE;MAAE,CAAC,CAAC;IAC7C;IACA,IAAI,CAACT,kBAAkB,CAAC,CAAC;EAC7B;EAEAW,gBAAgBA,CAACH,EAAE,EAAE;IACjB,IAAI,CAACf,MAAM,GAAG,IAAI,CAACA,MAAM,CAACmB,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACH,MAAM,CAACI,EAAE,KAAKA,EAAE,CAAC;IAC/D,IAAI,CAACR,kBAAkB,CAAC,CAAC;EAC7B;EAEAa,cAAcA,CAACL,EAAE,EAAEC,QAAQ,EAAE;IACzB,MAAMF,IAAI,GAAG,IAAI,CAACd,MAAM,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,MAAM,CAACI,EAAE,KAAKA,EAAE,CAAC;IAC5D,IAAID,IAAI,EAAE;MACNA,IAAI,CAACE,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACT,kBAAkB,CAAC,CAAC;IAC7B;EACJ;EAEAc,WAAWA,CAAA,EAAG;IACV,IAAI,CAACrB,MAAM,GAAG,EAAE;IAChBG,YAAY,CAACmB,UAAU,CAAC,QAAQ,CAAC;EACrC;EAEA,IAAIC,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACvB,MAAM;EACtB;EAEA,IAAIwB,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACxB,MAAM,CAACyB,MAAM,CAAC,CAACC,GAAG,EAAEZ,IAAI,KAAKY,GAAG,GAAGZ,IAAI,CAACE,QAAQ,EAAE,CAAC,CAAC;EACpE;EAEA,IAAIW,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAAC3B,MAAM,CAACyB,MAAM,CAAC,CAACC,GAAG,EAAEZ,IAAI,KAAKY,GAAG,GAAGZ,IAAI,CAACH,MAAM,CAACiB,KAAK,GAAGd,IAAI,CAACE,QAAQ,EAAE,CAAC,CAAC;EACxF;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}