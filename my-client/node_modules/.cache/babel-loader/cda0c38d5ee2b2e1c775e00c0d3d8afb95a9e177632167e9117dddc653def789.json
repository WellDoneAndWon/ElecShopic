{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElecShopic\\\\my-client\\\\src\\\\components\\\\DeviceItem.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\nimport bigStar from \"../assets/bigStar.png\";\nimport { useParams } from 'react-router-dom';\nimport { fetchOneDevice } from \"../http/deviceAPI\";\nimport AsyncState from \"../components/AsyncState\"; // Импортируйте ваш компонент\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DevicePage = () => {\n  _s();\n  const [device, setDevice] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    fetchOneDevice(id).then(data => setDevice(data)).catch(e => {\n      var _e$response, _e$response$data;\n      return setError(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || \"Ошибка загрузки устройства\");\n    }).finally(() => setLoading(false));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(AsyncState, {\n    loading: loading,\n    error: error,\n    children: device && /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(DevicePage, \"gWQEhVttRusPRkLPhMIcX9S7UNE=\", false, function () {\n  return [useParams];\n});\n_c = DevicePage;\nexport default DevicePage;\nvar _c;\n$RefreshReg$(_c, \"DevicePage\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","Col","Container","Image","Row","bigStar","useParams","fetchOneDevice","AsyncState","jsxDEV","_jsxDEV","DevicePage","_s","device","setDevice","loading","setLoading","error","setError","id","then","data","catch","e","_e$response","_e$response$data","response","message","finally","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ElecShopic/my-client/src/components/DeviceItem.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\r\nimport bigStar from \"../assets/bigStar.png\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchOneDevice } from \"../http/deviceAPI\";\r\nimport AsyncState from \"../components/AsyncState\"; // Импортируйте ваш компонент\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        fetchOneDevice(id)\r\n            .then(data => setDevice(data))\r\n            .catch(e => setError(e.response?.data?.message || \"Ошибка загрузки устройства\"))\r\n            .finally(() => setLoading(false));\r\n    }, [id]);\r\n\r\n    return (\r\n        <AsyncState loading={loading} error={error}>\r\n            {device && (\r\n                <Container className=\"mt-3\">\r\n                    {/* ...ваш основной JSX для отображения устройства... */}\r\n                </Container>\r\n            )}\r\n        </AsyncState>\r\n    );\r\n};\r\n\r\nexport default DevicePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,KAAK,EAAEC,GAAG,QAAQ,iBAAiB;AAC1E,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,UAAU,MAAM,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEqB;EAAG,CAAC,GAAGb,SAAS,CAAC,CAAC;EAE1BT,SAAS,CAAC,MAAM;IACZmB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEdX,cAAc,CAACY,EAAE,CAAC,CACbC,IAAI,CAACC,IAAI,IAAIP,SAAS,CAACO,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,CAAC;MAAA,IAAAC,WAAA,EAAAC,gBAAA;MAAA,OAAIP,QAAQ,CAAC,EAAAM,WAAA,GAAAD,CAAC,CAACG,QAAQ,cAAAF,WAAA,wBAAAC,gBAAA,GAAVD,WAAA,CAAYH,IAAI,cAAAI,gBAAA,uBAAhBA,gBAAA,CAAkBE,OAAO,KAAI,4BAA4B,CAAC;IAAA,EAAC,CAC/EC,OAAO,CAAC,MAAMZ,UAAU,CAAC,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACG,EAAE,CAAC,CAAC;EAER,oBACIT,OAAA,CAACF,UAAU;IAACO,OAAO,EAAEA,OAAQ;IAACE,KAAK,EAAEA,KAAM;IAAAY,QAAA,EACtChB,MAAM,iBACHH,OAAA,CAACR,SAAS;MAAC4B,SAAS,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhB;EACd;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAErB,CAAC;AAACtB,EAAA,CAzBID,UAAU;EAAA,QAIGL,SAAS;AAAA;AAAA6B,EAAA,GAJtBxB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}