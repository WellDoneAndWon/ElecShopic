{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElecShopic\\\\my-client\\\\src\\\\pages\\\\Shop.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport TypeBar from '../components/TypeBar';\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport { Context } from \"../index\";\nimport { fetchTypes, fetchBrands, fetchDevices } from \"../http/deviceAPI\";\nimport { observer } from \"mobx-react-lite\";\nimport Pages from \"../components/Pages\";\nimport NavBar from \"../components/NavBar\"; // Импортируй свой NavBar\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Shop = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data));\n    fetchBrands().then(data => device.setBrands(data));\n    fetchDevices(null, null, 1, 3).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, [device]);\n  useEffect(() => {\n    fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 3).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, [device.page, device.selectedType, device.selectedBrand]);\n  const filteredDevices = device.devices.filter(dev => dev.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      search: search,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          children: [/*#__PURE__*/_jsxDEV(BrandBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DeviceList, {\n            devices: filteredDevices\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"IBh2T45AVjBgS9f4AVXkvVBKbBo=\")), \"IBh2T45AVjBgS9f4AVXkvVBKbBo=\");\n_c2 = Shop;\nexport default Shop;\nvar _c, _c2;\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Col","Container","Row","TypeBar","BrandBar","DeviceList","Context","fetchTypes","fetchBrands","fetchDevices","observer","Pages","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Shop","_s","_c","device","search","setSearch","then","data","setTypes","setBrands","setDevices","rows","setTotalCount","count","selectedType","id","selectedBrand","page","filteredDevices","devices","filter","dev","name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","md","_c2","$RefreshReg$"],"sources":["C:/ElecShopic/my-client/src/pages/Shop.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport TypeBar from '../components/TypeBar';\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport { Context } from \"../index\";\r\nimport { fetchTypes, fetchBrands, fetchDevices } from \"../http/deviceAPI\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Pages from \"../components/Pages\";\r\nimport NavBar from \"../components/NavBar\"; // Импортируй свой NavBar\r\n\r\nconst Shop = observer(() => {\r\n    const { device } = useContext(Context);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data));\r\n        fetchBrands().then(data => device.setBrands(data));\r\n        fetchDevices(null, null, 1, 3).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device]);\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 3).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand])\r\n\r\n    const filteredDevices = device.devices.filter(dev =>\r\n        dev.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <NavBar search={search} setSearch={setSearch} />\r\n            <Container>\r\n                <Row className='mt-2'>\r\n                    <Col md={3}>\r\n                        <TypeBar />\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <BrandBar />\r\n                        <DeviceList devices={filteredDevices} />\r\n                        <Pages />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}