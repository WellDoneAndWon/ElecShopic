{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElecShopic\\\\my-client\\\\src\\\\components\\\\NavBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navbar, Nav, Button, Container } from 'react-bootstrap';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { SHOP_ROUTE, ADMIN_ROUTE, LOGIN_ROUTE } from '../utils/constants';\nimport { Context } from '../index';\nimport { observer } from \"mobx-react-lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    user\n  } = useContext(Context);\n  const navigate = useNavigate();\n  const logOut = () => {\n    user.setIsAuth(false);\n    // Здесь можно очистить токен/стейт пользователя, если используете\n    navigate(LOGIN_ROUTE);\n  };\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        style: {\n          color: 'white',\n          textDecoration: 'none'\n        },\n        to: SHOP_ROUTE,\n        children: \"ElecShopic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), user.isAuth ? /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"ms-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-light\",\n          onClick: () => navigate(ADMIN_ROUTE),\n          children: \"\\u0410\\u0434\\u043C\\u0438\\u043D \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-light\",\n          className: \"ms-2\",\n          onClick: logOut,\n          children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"ms-auto\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-light\",\n          onClick: () => navigate(LOGIN_ROUTE),\n          children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}, \"CVWIIDWuxG3gFZZa/BTAwr3ajXo=\", false, function () {\n  return [useNavigate];\n})), \"CVWIIDWuxG3gFZZa/BTAwr3ajXo=\", false, function () {\n  return [useNavigate];\n});\n_c2 = NavBar;\nexport default NavBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavBar$observer\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"names":["React","useContext","Navbar","Nav","Button","Container","NavLink","useNavigate","SHOP_ROUTE","ADMIN_ROUTE","LOGIN_ROUTE","Context","observer","jsxDEV","_jsxDEV","NavBar","_s","_c","user","navigate","logOut","setIsAuth","bg","variant","children","style","color","textDecoration","to","fileName","_jsxFileName","lineNumber","columnNumber","isAuth","className","onClick","_c2","$RefreshReg$"],"sources":["C:/ElecShopic/my-client/src/components/NavBar.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navbar, Nav, Button, Container } from 'react-bootstrap';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { SHOP_ROUTE, ADMIN_ROUTE, LOGIN_ROUTE } from '../utils/constants';\r\nimport { Context } from '../index';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst NavBar = observer(() => {\r\n    const { user } = useContext(Context);\r\n    const navigate = useNavigate();\r\n\r\n    const logOut = () => {\r\n        user.setIsAuth(false);\r\n        // Здесь можно очистить токен/стейт пользователя, если используете\r\n        navigate(LOGIN_ROUTE);\r\n    };\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <NavLink style={{ color: 'white', textDecoration: 'none' }} to={SHOP_ROUTE}>\r\n                    ElecShopic\r\n                </NavLink>\r\n\r\n                {user.isAuth ? (\r\n                    <Nav className=\"ms-auto\">\r\n                        <Button\r\n                            variant=\"outline-light\"\r\n                            onClick={() => navigate(ADMIN_ROUTE)}\r\n                        >\r\n                            Админ панель\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outline-light\"\r\n                            className=\"ms-2\"\r\n                            onClick={logOut}\r\n                        >\r\n                            Выйти\r\n                        </Button>\r\n                    </Nav>\r\n                ) : (\r\n                    <Nav className=\"ms-auto\">\r\n                        <Button\r\n                            variant=\"outline-light\"\r\n                            onClick={() => navigate(LOGIN_ROUTE)}\r\n                        >\r\n                            Авторизация\r\n                        </Button>\r\n                    </Nav>\r\n                )}\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n});\r\n\r\nexport default NavBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAEC,SAAS,QAAQ,iBAAiB;AAChE,SAASC,OAAO,EAAEC,WAAW,QAAQ,kBAAkB;AACvD,SAASC,UAAU,EAAEC,WAAW,EAAEC,WAAW,QAAQ,oBAAoB;AACzE,SAASC,OAAO,QAAQ,UAAU;AAClC,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAAC,EAAA,CAAGJ,QAAQ,CAAAK,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC1B,MAAM;IAAEE;EAAK,CAAC,GAAGjB,UAAU,CAACU,OAAO,CAAC;EACpC,MAAMQ,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,MAAM,GAAGA,CAAA,KAAM;IACjBF,IAAI,CAACG,SAAS,CAAC,KAAK,CAAC;IACrB;IACAF,QAAQ,CAACT,WAAW,CAAC;EACzB,CAAC;EAED,oBACII,OAAA,CAACZ,MAAM;IAACoB,EAAE,EAAC,MAAM;IAACC,OAAO,EAAC,MAAM;IAAAC,QAAA,eAC5BV,OAAA,CAACT,SAAS;MAAAmB,QAAA,gBACNV,OAAA,CAACR,OAAO;QAACmB,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,cAAc,EAAE;QAAO,CAAE;QAACC,EAAE,EAAEpB,UAAW;QAAAgB,QAAA,EAAC;MAE5E;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EAETd,IAAI,CAACe,MAAM,gBACRnB,OAAA,CAACX,GAAG;QAAC+B,SAAS,EAAC,SAAS;QAAAV,QAAA,gBACpBV,OAAA,CAACV,MAAM;UACHmB,OAAO,EAAC,eAAe;UACvBY,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAACV,WAAW,CAAE;UAAAe,QAAA,EACxC;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlB,OAAA,CAACV,MAAM;UACHmB,OAAO,EAAC,eAAe;UACvBW,SAAS,EAAC,MAAM;UAChBC,OAAO,EAAEf,MAAO;UAAAI,QAAA,EACnB;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,gBAENlB,OAAA,CAACX,GAAG;QAAC+B,SAAS,EAAC,SAAS;QAAAV,QAAA,eACpBV,OAAA,CAACV,MAAM;UACHmB,OAAO,EAAC,eAAe;UACvBY,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAACT,WAAW,CAAE;UAAAc,QAAA,EACxC;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEjB,CAAC;EAAA,QA5CoBzB,WAAW;AAAA,EA4C/B,CAAC;EAAA,QA5CmBA,WAAW;AAAA,EA4C9B;AAAC6B,GAAA,GA9CGrB,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAAE,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}