{"ast":null,"code":"var _jsxFileName = \"C:\\\\ElecShopic\\\\my-client\\\\src\\\\components\\\\DualRangeSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport \"./DualRangeSlider.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DualRangeSlider = ({\n  min,\n  max,\n  values,\n  onChange\n}) => {\n  _s();\n  const minValRef = useRef(null);\n  const maxValRef = useRef(null);\n  const range = useRef(null);\n\n  // Преобразуем значения в числа и ограничиваем диапазоном\n  const minVal = Math.max(min, Math.min(values[0], values[1] - 1));\n  const maxVal = Math.min(max, Math.max(values[1], values[0] + 1));\n\n  // Рассчитываем позиции для трека\n  const getPercent = value => Math.round((value - min) / (max - min) * 100);\n  const minPercent = getPercent(minVal);\n  const maxPercent = getPercent(maxVal);\n\n  // Обновляем трек при изменении значений\n  useEffect(() => {\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [minVal, maxVal, min, max]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: minVal,\n      ref: minValRef,\n      onChange: e => {\n        const value = Math.min(Number(e.target.value), maxVal - 1);\n        onChange([value, maxVal]);\n      },\n      className: \"thumb thumb--left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: maxVal,\n      ref: maxValRef,\n      onChange: e => {\n        const value = Math.max(Number(e.target.value), minVal + 1);\n        onChange([minVal, value]);\n      },\n      className: \"thumb thumb--right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: range,\n        className: \"slider__range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__left-value\",\n        children: minVal.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__right-value\",\n        children: maxVal.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(DualRangeSlider, \"q+tpNGuI9TewCTghfs2Qw1RF7jg=\");\n_c = DualRangeSlider;\nexport default DualRangeSlider;\nvar _c;\n$RefreshReg$(_c, \"DualRangeSlider\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","DualRangeSlider","min","max","values","onChange","_s","minValRef","maxValRef","range","minVal","Math","maxVal","getPercent","value","round","minPercent","maxPercent","current","style","left","width","className","children","type","ref","e","Number","target","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","_c","$RefreshReg$"],"sources":["C:/ElecShopic/my-client/src/components/DualRangeSlider.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport \"./DualRangeSlider.css\";\r\n\r\nconst DualRangeSlider = ({ min, max, values, onChange }) => {\r\n    const minValRef = useRef(null);\r\n    const maxValRef = useRef(null);\r\n    const range = useRef(null);\r\n\r\n    // Преобразуем значения в числа и ограничиваем диапазоном\r\n    const minVal = Math.max(min, Math.min(values[0], values[1] - 1));\r\n    const maxVal = Math.min(max, Math.max(values[1], values[0] + 1));\r\n\r\n    // Рассчитываем позиции для трека\r\n    const getPercent = (value) => Math.round(((value - min) / (max - min)) * 100);\r\n    const minPercent = getPercent(minVal);\r\n    const maxPercent = getPercent(maxVal);\r\n\r\n    // Обновляем трек при изменении значений\r\n    useEffect(() => {\r\n        if (range.current) {\r\n            range.current.style.left = `${minPercent}%`;\r\n            range.current.style.width = `${maxPercent - minPercent}%`;\r\n        }\r\n    }, [minVal, maxVal, min, max]);\r\n\r\n    return (\r\n        <div className=\"slider-container\">\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={minVal}\r\n                ref={minValRef}\r\n                onChange={(e) => {\r\n                    const value = Math.min(Number(e.target.value), maxVal - 1);\r\n                    onChange([value, maxVal]);\r\n                }}\r\n                className=\"thumb thumb--left\"\r\n            />\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={maxVal}\r\n                ref={maxValRef}\r\n                onChange={(e) => {\r\n                    const value = Math.max(Number(e.target.value), minVal + 1);\r\n                    onChange([minVal, value]);\r\n                }}\r\n                className=\"thumb thumb--right\"\r\n            />\r\n            <div className=\"slider\">\r\n                <div className=\"slider__track\" />\r\n                <div ref={range} className=\"slider__range\" />\r\n                <div className=\"slider__left-value\">{minVal.toLocaleString()}</div>\r\n                <div className=\"slider__right-value\">{maxVal.toLocaleString()}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DualRangeSlider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}