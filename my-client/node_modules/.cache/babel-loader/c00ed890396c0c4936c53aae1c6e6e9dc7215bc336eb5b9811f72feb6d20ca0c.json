{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nexport const createType = async type => {\n  const {\n    data\n  } = await $authHost.post('api/type', type);\n  return data;\n};\nexport const fetchTypes = async () => {\n  const {\n    data\n  } = await $host.get('api/type');\n  return data;\n};\nexport const createBrand = async brand => {\n  const {\n    data\n  } = await $authHost.post('api/type', type);\n  return data;\n};\nexport const fetchBrand = async () => {\n  const {\n    data\n  } = await $host.get('api/type');\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","createType","type","data","post","fetchTypes","get","createBrand","brand","fetchBrand"],"sources":["C:/ElecShopic/my-client/src/http/deviceAPI.js"],"sourcesContent":["import { $authHost, $host } from \"./index\";\r\n\r\nexport const createType = async (type) => {\r\n    const { data } = await $authHost.post('api/type', type);\r\n    return data;\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const { data } = await $host.get('api/type');\r\n    return data;\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const { data } = await $authHost.post('api/type', type);\r\n    return data;\r\n}\r\n\r\nexport const fetchBrand = async () => {\r\n    const { data } = await $host.get('api/type');\r\n    return data;\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,SAAS;AAE1C,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,UAAU,EAAEF,IAAI,CAAC;EACvD,OAAOC,IAAI;AACf,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAM;IAAEF;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,UAAU,CAAC;EAC5C,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,MAAOC,KAAK,IAAK;EACxC,MAAM;IAAEL;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,UAAU,EAAEF,IAAI,CAAC;EACvD,OAAOC,IAAI;AACf,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAM;IAAEN;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,UAAU,CAAC;EAC5C,OAAOH,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}