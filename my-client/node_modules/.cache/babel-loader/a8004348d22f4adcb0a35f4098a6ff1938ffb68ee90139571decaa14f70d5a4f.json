{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nexport default class BasketStore {\n  constructor() {\n    this._items = [];\n    this._userId = null; // Добавляем ID пользователя\n    makeAutoObservable(this);\n  }\n  setUserId(userId) {\n    this._userId = userId;\n    this.loadFromLocalStorage();\n  }\n  loadFromLocalStorage() {\n    if (!this._userId) return;\n    const savedBasket = localStorage.getItem(`basket_${this._userId}`);\n    if (savedBasket) {\n      this._items = JSON.parse(savedBasket);\n    }\n  }\n  saveToLocalStorage() {\n    if (!this._userId) return;\n    localStorage.setItem(`basket_${this._userId}`, JSON.stringify(this._items));\n  }\n  addToBasket(device) {\n    if (!this._userId) return; // Не добавляем без пользователя\n    const existingItem = this._items.find(item => item.device.id === device.id);\n    if (existingItem) {\n      existingItem.quantity += 1;\n    } else {\n      this._items.push({\n        device,\n        quantity: 1\n      });\n    }\n    this.saveToLocalStorage();\n  }\n\n  // Остальные методы остаются без изменений, но везде добавляем saveToLocalStorage()\n  // ...\n}","map":{"version":3,"names":["makeAutoObservable","BasketStore","constructor","_items","_userId","setUserId","userId","loadFromLocalStorage","savedBasket","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","addToBasket","device","existingItem","find","item","id","quantity","push"],"sources":["C:/ElecShopic/my-client/src/store/BasketStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nexport default class BasketStore {\r\n    constructor() {\r\n        this._items = [];\r\n        this._userId = null; // Добавляем ID пользователя\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setUserId(userId) {\r\n        this._userId = userId;\r\n        this.loadFromLocalStorage();\r\n    }\r\n\r\n    loadFromLocalStorage() {\r\n        if (!this._userId) return;\r\n        const savedBasket = localStorage.getItem(`basket_${this._userId}`);\r\n        if (savedBasket) {\r\n            this._items = JSON.parse(savedBasket);\r\n        }\r\n    }\r\n\r\n    saveToLocalStorage() {\r\n        if (!this._userId) return;\r\n        localStorage.setItem(`basket_${this._userId}`, JSON.stringify(this._items));\r\n    }\r\n\r\n    addToBasket(device) {\r\n        if (!this._userId) return; // Не добавляем без пользователя\r\n        const existingItem = this._items.find(item => item.device.id === device.id);\r\n        if (existingItem) {\r\n            existingItem.quantity += 1;\r\n        } else {\r\n            this._items.push({ device, quantity: 1 });\r\n        }\r\n        this.saveToLocalStorage();\r\n    }\r\n\r\n    // Остальные методы остаются без изменений, но везде добавляем saveToLocalStorage()\r\n    // ...\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAEzC,eAAe,MAAMC,WAAW,CAAC;EAC7BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,OAAO,GAAG,IAAI,CAAC,CAAC;IACrBJ,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAK,SAASA,CAACC,MAAM,EAAE;IACd,IAAI,CAACF,OAAO,GAAGE,MAAM;IACrB,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B;EAEAA,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAAC,IAAI,CAACH,OAAO,EAAE;IACnB,MAAMI,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,IAAI,CAACN,OAAO,EAAE,CAAC;IAClE,IAAII,WAAW,EAAE;MACb,IAAI,CAACL,MAAM,GAAGQ,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC;IACzC;EACJ;EAEAK,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAAC,IAAI,CAACT,OAAO,EAAE;IACnBK,YAAY,CAACK,OAAO,CAAC,UAAU,IAAI,CAACV,OAAO,EAAE,EAAEO,IAAI,CAACI,SAAS,CAAC,IAAI,CAACZ,MAAM,CAAC,CAAC;EAC/E;EAEAa,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAAC,IAAI,CAACb,OAAO,EAAE,OAAO,CAAC;IAC3B,MAAMc,YAAY,GAAG,IAAI,CAACf,MAAM,CAACgB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,MAAM,CAACI,EAAE,KAAKJ,MAAM,CAACI,EAAE,CAAC;IAC3E,IAAIH,YAAY,EAAE;MACdA,YAAY,CAACI,QAAQ,IAAI,CAAC;IAC9B,CAAC,MAAM;MACH,IAAI,CAACnB,MAAM,CAACoB,IAAI,CAAC;QAAEN,MAAM;QAAEK,QAAQ,EAAE;MAAE,CAAC,CAAC;IAC7C;IACA,IAAI,CAACT,kBAAkB,CAAC,CAAC;EAC7B;;EAEA;EACA;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}