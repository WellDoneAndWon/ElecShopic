{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { jwtDecode } from \"jwt-decode\";\nexport default class UserStore {\n  constructor(basketStore) {\n    this._isAuth = false;\n    this._user = {};\n    this._role = \"USER\";\n    this._basketStore = basketStore;\n    makeAutoObservable(this);\n\n    // Автоматическая проверка авторизации при инициализации\n    this.checkAuth();\n  }\n  setIsAuth(bool) {\n    this._isAuth = bool;\n  }\n  setUser(user) {\n    this._user = user;\n  }\n  setRole(role) {\n    this._role = role;\n  }\n\n  // Проверка авторизации при загрузке приложения\n  checkAuth() {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const user = jwtDecode(token);\n\n        // Проверяем, не истек ли токен\n        const currentTime = Date.now() / 1000;\n        if (user.exp > currentTime) {\n          this.setIsAuth(true);\n          this.setUser(user);\n          this.setRole(user.role || \"USER\");\n          // Устанавливаем ID пользователя в корзину\n          this._basketStore.setUserId(user.id);\n        } else {\n          // Токен истек - удаляем его\n          this.logout();\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при проверке токена:', error);\n      // Если токен поврежден - удаляем его\n      this.logout();\n    }\n  }\n  login(token) {\n    try {\n      localStorage.setItem('token', token);\n      const user = jwtDecode(token);\n      this.setIsAuth(true);\n      this.setUser(user);\n      this.setRole(user.role || \"USER\");\n      // Устанавливаем ID пользователя в корзину\n      this._basketStore.setUserId(user.id);\n    } catch (error) {\n      console.error('Ошибка при входе:', error);\n      this.logout();\n    }\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.setIsAuth(false);\n    this.setUser({});\n    this.setRole(\"USER\");\n    // Сбрасываем ID пользователя в корзине\n    this._basketStore.setUserId(null);\n  }\n  get isAuth() {\n    return this._isAuth;\n  }\n  get user() {\n    return this._user;\n  }\n  get role() {\n    return this._role;\n  }\n}","map":{"version":3,"names":["makeAutoObservable","jwtDecode","UserStore","constructor","basketStore","_isAuth","_user","_role","_basketStore","checkAuth","setIsAuth","bool","setUser","user","setRole","role","token","localStorage","getItem","currentTime","Date","now","exp","setUserId","id","logout","error","console","login","setItem","removeItem","isAuth"],"sources":["C:/ElecShopic/my-client/src/store/UserStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nexport default class UserStore {\r\n    constructor(basketStore) {\r\n        this._isAuth = false;\r\n        this._user = {};\r\n        this._role = \"USER\";\r\n        this._basketStore = basketStore;\r\n        makeAutoObservable(this);\r\n\r\n        // Автоматическая проверка авторизации при инициализации\r\n        this.checkAuth();\r\n    }\r\n\r\n    setIsAuth(bool) {\r\n        this._isAuth = bool;\r\n    }\r\n\r\n    setUser(user) {\r\n        this._user = user;\r\n    }\r\n\r\n    setRole(role) {\r\n        this._role = role;\r\n    }\r\n\r\n    // Проверка авторизации при загрузке приложения\r\n    checkAuth() {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (token) {\r\n                const user = jwtDecode(token);\r\n\r\n                // Проверяем, не истек ли токен\r\n                const currentTime = Date.now() / 1000;\r\n                if (user.exp > currentTime) {\r\n                    this.setIsAuth(true);\r\n                    this.setUser(user);\r\n                    this.setRole(user.role || \"USER\");\r\n                    // Устанавливаем ID пользователя в корзину\r\n                    this._basketStore.setUserId(user.id);\r\n                } else {\r\n                    // Токен истек - удаляем его\r\n                    this.logout();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при проверке токена:', error);\r\n            // Если токен поврежден - удаляем его\r\n            this.logout();\r\n        }\r\n    }\r\n\r\n    login(token) {\r\n        try {\r\n            localStorage.setItem('token', token);\r\n            const user = jwtDecode(token);\r\n            this.setIsAuth(true);\r\n            this.setUser(user);\r\n            this.setRole(user.role || \"USER\");\r\n            // Устанавливаем ID пользователя в корзину\r\n            this._basketStore.setUserId(user.id);\r\n        } catch (error) {\r\n            console.error('Ошибка при входе:', error);\r\n            this.logout();\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('token');\r\n        this.setIsAuth(false);\r\n        this.setUser({});\r\n        this.setRole(\"USER\");\r\n        // Сбрасываем ID пользователя в корзине\r\n        this._basketStore.setUserId(null);\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth;\r\n    }\r\n\r\n    get user() {\r\n        return this._user;\r\n    }\r\n\r\n    get role() {\r\n        return this._role;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AACzC,SAASC,SAAS,QAAQ,YAAY;AAEtC,eAAe,MAAMC,SAAS,CAAC;EAC3BC,WAAWA,CAACC,WAAW,EAAE;IACrB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACC,KAAK,GAAG,MAAM;IACnB,IAAI,CAACC,YAAY,GAAGJ,WAAW;IAC/BJ,kBAAkB,CAAC,IAAI,CAAC;;IAExB;IACA,IAAI,CAACS,SAAS,CAAC,CAAC;EACpB;EAEAC,SAASA,CAACC,IAAI,EAAE;IACZ,IAAI,CAACN,OAAO,GAAGM,IAAI;EACvB;EAEAC,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACP,KAAK,GAAGO,IAAI;EACrB;EAEAC,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACR,KAAK,GAAGQ,IAAI;EACrB;;EAEA;EACAN,SAASA,CAAA,EAAG;IACR,IAAI;MACA,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACP,MAAMH,IAAI,GAAGZ,SAAS,CAACe,KAAK,CAAC;;QAE7B;QACA,MAAMG,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;QACrC,IAAIR,IAAI,CAACS,GAAG,GAAGH,WAAW,EAAE;UACxB,IAAI,CAACT,SAAS,CAAC,IAAI,CAAC;UACpB,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC;UAClB,IAAI,CAACC,OAAO,CAACD,IAAI,CAACE,IAAI,IAAI,MAAM,CAAC;UACjC;UACA,IAAI,CAACP,YAAY,CAACe,SAAS,CAACV,IAAI,CAACW,EAAE,CAAC;QACxC,CAAC,MAAM;UACH;UACA,IAAI,CAACC,MAAM,CAAC,CAAC;QACjB;MACJ;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD;MACA,IAAI,CAACD,MAAM,CAAC,CAAC;IACjB;EACJ;EAEAG,KAAKA,CAACZ,KAAK,EAAE;IACT,IAAI;MACAC,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;MACpC,MAAMH,IAAI,GAAGZ,SAAS,CAACe,KAAK,CAAC;MAC7B,IAAI,CAACN,SAAS,CAAC,IAAI,CAAC;MACpB,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC;MAClB,IAAI,CAACC,OAAO,CAACD,IAAI,CAACE,IAAI,IAAI,MAAM,CAAC;MACjC;MACA,IAAI,CAACP,YAAY,CAACe,SAAS,CAACV,IAAI,CAACW,EAAE,CAAC;IACxC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,IAAI,CAACD,MAAM,CAAC,CAAC;IACjB;EACJ;EAEAA,MAAMA,CAAA,EAAG;IACLR,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACpB,SAAS,CAAC,KAAK,CAAC;IACrB,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;IAChB,IAAI,CAACE,OAAO,CAAC,MAAM,CAAC;IACpB;IACA,IAAI,CAACN,YAAY,CAACe,SAAS,CAAC,IAAI,CAAC;EACrC;EAEA,IAAIQ,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAAC1B,OAAO;EACvB;EAEA,IAAIQ,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACP,KAAK;EACrB;EAEA,IAAIS,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACR,KAAK;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}